---
- name: Create
  hosts: localhost
  gather_facts: false
  no_log: "{{ molecule_no_log }}"

  vars:
    molecule_ephemeral_directory: "{{ lookup('env', 'MOLECULE_EPHEMERAL_DIRECTORY') }}"
    molecule_scenario_name: "{{ lookup('env', 'MOLECULE_SCENARIO_NAME') }}"
    molecule_project_name: "{{ lookup('env', 'MOLECULE_PROJECT_DIRECTORY') | basename }}"
    qemu_vm_arch: "x86_64"
    qemu_vm_memory: "1024"

  tasks:
    - name: Register VMs data
      ansible.builtin.set_fact:
        instance: {
          "instance": "molecule-{{ molecule_project_name }}-{{ molecule_scenario_name }}-{{ item.name }}",
          "name": "{{ item.name }}",
          "vm_arch": "{{ item.vm_arch | default(qemu_vm_arch) }}",
          "vm_image": "{{ item.vm_image }}",
          "vm_memory": "{{ item.vm_memory | default(qemu_vm_memory) }}",
          "vm_ssh_port": "{{ item.vm_ssh_port | default(10022) }}",
        }
      loop: "{{ molecule_yml.platforms }}"
      loop_control:
        label: "{{ item.name }}"
      register: molecule_instances

    - name: Prepare VMs data
      ansible.builtin.set_fact:
        molecule_instances: "{{ molecule_instances.results | map(attribute='ansible_facts.instance') | list }}"

    - debug: var=molecule_instances

    - name: Launch VMs  # noqa: no-changed-when
      ansible.builtin.command: >
        qemu-system-{{ item.vm_arch }}
        -m {{ item.vm_memory }}
        -hda {{ item.vm_image }}
        -net user,hostfwd=tcp::{{ vm_ssh_port }}-:22
        -net nic
        -display none
        -daemonize
        -pidfile {{ molecule_ephemeral_directory }}/pid-{{ item.name }}.txt
      loop: "{{ molecule_instances }}"
      loop_control:
        label: "{{ item.name }}"
